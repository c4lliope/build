# The bare necessities

## Set up `<ctrl-t>` as a prefix for shortcuts
unbind C-b
set -g prefix C-t

set -s escape-time 0

## Start up into Fish shell
set-option -g default-shell /usr/local/bin/fish

## Set up colors and key bindings
set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

## Set a reasonable length for history
set-option -g history-limit 10000

# Shortcuts (all should be prefixed with `<ctrl-t>`)

## `<ctrl-r>` re-loads this configuration
bind-key r source-file ~/.config/tmux/config \; display-message "tmux config file reloaded"

# Interface

## Status Bar Contents
set-option -g status-position top
set-option -g status-left-length 50
set-option -g status-right ""

## Colors

### Status Bar
set-option -g status-bg blue
set-option -g status-fg "#ffffff"

### Pane borders
set-option -g pane-active-border-fg "#ffffff"
set-option -g pane-active-border-bg "blue"

# Panes

## Split out another pane, horizontally or vertically
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

## Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

## Adjust Pane Size

### Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

### Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Tabs

## Open a new tab
bind c new-window -c "#{pane_current_path}"

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d
bind-key C-l switch-client -l

# Copy Mode

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# bind C-[ copy-mode
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Use fuzzy searching to switch between tmux sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: " "swap-pane -t '%%'"

# Start a new session after changing directories
bind-key C-b send-keys 'tat && exit' 'C-m'

# Exit session, switch to the next available tmux session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
