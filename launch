#!/bin/bash

# Exit if any subcommand fails
set -e

# First things first, let's get Homebrew up and running
# so we can install everything we need within this script.
# Homebrew will set up the Apple command-line tools during the install process
# See http://brew.sh
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
brew update

# Clone our devfiles if they have not been already
if [ ! -d  ~/.dev ]; then
  git clone  https://github.com/c4lliope/dev ~/.dev
fi

# Upgrade
cd ~/.dev && git pull

# Add programs linked in `~/.dev/Brewfile`
cd ~/.dev && brew bundle

# Add python support in NeoVim, required for a number of plugins
pip3 install neovim

# Link up configuration files
for FILE in $(ls ./config); do
  if [ ! -e ~/.config/$FILE ]; then
    ln -s ~/.dev/config/$FILE ~/.config/$FILE
  fi
done

if [ ! -e ~/.phoenix.js ]; then
  ln -s ~/.dev/phoenix.js ~/.phoenix.js
fi

if [ ! -e ~/.hyper.js ]; then
  ln -s ~/.dev/hyper.js ~/.hyper.js
fi

# If there is not a virtual machine for our Docker host to run on,
# create one.
docker-machine ls -q | grep -q 'default' ||\
  docker-machine create --driver virtualbox default

# Set hostname before generating SSH keys
read -p "What is the hostname for this computer? (ENTER to skip) " hostname
[ -z "$hostname" ] || scutil --set HostName $hostname

if [ ! -d ~/.ssh ]; then
  ssh-keygen
fi
